/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    `java-library`

    kotlin("jvm")
}

dependencies { // kotlin.logging
    // todo 제거 필요
    implementation("io.github.oshai:kotlin-logging:${Versions.kotlinLogging}")
}

repositories {
    mavenCentral()
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    description = "Runs the total tests."
    useJUnitPlatform()
}

// .gitkeep 파일 중복
// https://stackoverflow.com/questions/67265308/gradle-entry-classpath-is-a-duplicate-but-no-duplicate-handling-strategy-has-b
tasks.withType<Jar> {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named<Jar>("jar") {
    enabled = true
}

// abstract class 용 (concrete class 와 동일 내용)
val applicationGroup: String = project.findProperty("application.group").toString()
val applicationGroupName: String = project.findProperty("application.group.name").toString()
val applicationName: String = project.findProperty("application.name").toString()
val applicationVersion: String = project.findProperty("application.version").toString()
//
val currentTaskName = project.gradle.startParameter.taskNames.firstOrNull()

tasks.named<Jar>("jar") {
    enabled = true
    archiveBaseName = applicationName
    archiveVersion = applicationVersion
    archiveFileName = "$applicationGroupName-$applicationName-$applicationVersion.jar"

    if (currentTaskName == "bootJar" || currentTaskName == "jar") {
        exclude("**/application**-env.yml")
    }
}
